package github.com/hashicorp/terraform-provider-azuread/internal/common
import (
	"context"
	"fmt"
	"log"
	"net/http"
	"net/http/httputil"
	"os"
	"strings"

	"github.com/hashicorp/go-azure-sdk/sdk/auth"
	"github.com/hashicorp/go-azure-sdk/sdk/environments"
	"github.com/hashicorp/go-uuid"
	"github.com/hashicorp/terraform-plugin-sdk/v2/meta"
	"github.com/hashicorp/terraform-provider-azuread/version"
	"github.com/manicminer/hamilton/msgraph"
)
func (o ClientOptions) responseLogger(req *http.Request, resp *http.Response) (*http.Response, error) {
	requestId := "UNKNOWN"

	if req != nil {
		if v := req.Context().Value(contextKey("requestId")); v != nil {
			requestId = v.(string)
		}
	}

	if resp != nil {
		if dump, err2 := httputil.DumpResponse(resp, true); err2 == nil {
			log.Printf(`[DEBUG] ============================ Begin AzureAD Response ===========================
%s %s
Request ID: %s

%s
============================= End AzureAD Response ============================
`, req.Method, req.URL, requestId, dump)
		} else {
			log.Printf("[DEBUG] AzureAD Response: %s for %s (%s %s)\n", resp.Status, requestId, req.Method, req.URL)
		}
	} else {
		log.Printf("[DEBUG] AzureAD Request for %s (%s %s) completed with no response", requestId, req.Method, req.URL)
	}

	return resp, nil
}
