package github.com/hashicorp/terraform-provider-azuread/internal/services/userflows
import (
	"context"
	"errors"
	"fmt"
	"log"
	"net/http"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/clients"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/validation"
	"github.com/manicminer/hamilton/msgraph"
)
func userFlowAttributeResourceUpdate(ctx context.Context, d *pluginsdk.ResourceData, meta interface{}) pluginsdk.Diagnostics {
	client := meta.(*clients.Client).UserFlows.UserFlowAttributesClient
	id := d.Id()

	attr := msgraph.UserFlowAttribute{
		ID:          pointer.To(id),
		Description: pointer.To(d.Get("description").(string)),
	}

	if _, err := client.Update(ctx, attr); err != nil {
		return tf.ErrorDiagF(err, "Could not update user flow attribute with ID: %q", id)
	}

	return userFlowAttributeResourceRead(ctx, d, meta)
}
