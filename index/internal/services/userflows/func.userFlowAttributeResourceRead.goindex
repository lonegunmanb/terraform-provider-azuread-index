package github.com/hashicorp/terraform-provider-azuread/internal/services/userflows
import (
	"context"
	"errors"
	"fmt"
	"log"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/identity/stable/userflowattribute"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/terraform-provider-azuread/internal/clients"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/consistency"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/validation"
	"github.com/hashicorp/terraform-provider-azuread/internal/services/userflows/migrations"
)
func userFlowAttributeResourceRead(ctx context.Context, d *pluginsdk.ResourceData, meta interface{}) pluginsdk.Diagnostics {
	client := meta.(*clients.Client).UserFlows.UserFlowAttributeClient

	id, err := stable.ParseIdentityUserFlowAttributeID(d.Id())
	if err != nil {
		return tf.ErrorDiagPathF(err, "id", "Parsing ID")
	}

	resp, err := client.GetUserFlowAttribute(ctx, *id, userflowattribute.DefaultGetUserFlowAttributeOperationOptions())
	if err != nil {
		if response.WasNotFound(resp.HttpResponse) {
			log.Printf("[DEBUG] %s was not found - removing from state!", id)
			d.SetId("")
			return nil
		}
		return tf.ErrorDiagF(err, "Retrieving %s", id)
	}

	if resp.Model == nil {
		return tf.ErrorDiagF(errors.New("model was nil"), "Creating user flow attribute")
	}

	userFlowAttr := resp.Model.IdentityUserFlowAttribute()

	tf.Set(d, "attribute_type", pointer.From(userFlowAttr.UserFlowAttributeType))
	tf.Set(d, "data_type", pointer.From(userFlowAttr.DataType))
	tf.Set(d, "description", userFlowAttr.Description.GetOrZero())
	tf.Set(d, "display_name", userFlowAttr.DisplayName.GetOrZero())

	return nil
}
