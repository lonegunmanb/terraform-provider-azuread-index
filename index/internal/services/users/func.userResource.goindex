package github.com/hashicorp/terraform-provider-azuread/internal/services/users
import (
	"context"
	"errors"
	"fmt"
	"log"
	"net/http"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/beta"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	userBeta "github.com/hashicorp/go-azure-sdk/microsoft-graph/users/beta/user"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/users/stable/manager"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/users/stable/user"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/clients"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/consistency"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/validation"
	"github.com/hashicorp/terraform-provider-azuread/internal/services/users/migrations"
)
func userResource() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		CreateContext: userResourceCreate,
		ReadContext:   userResourceRead,
		UpdateContext: userResourceUpdate,
		DeleteContext: userResourceDelete,

		CustomizeDiff: userResourceCustomizeDiff,

		Timeouts: &pluginsdk.ResourceTimeout{
			Create: pluginsdk.DefaultTimeout(5 * time.Minute),
			Read:   pluginsdk.DefaultTimeout(5 * time.Minute),
			Update: pluginsdk.DefaultTimeout(5 * time.Minute),
			Delete: pluginsdk.DefaultTimeout(5 * time.Minute),
		},

		Importer: pluginsdk.ImporterValidatingResourceId(func(id string) error {
			if _, errs := stable.ValidateUserID(id, "id"); len(errs) > 0 {
				out := ""
				for _, err := range errs {
					out += err.Error()
				}
				return errors.New(out)
			}
			return nil
		}),

		SchemaVersion: 1,
		StateUpgraders: []pluginsdk.StateUpgrader{
			{
				Type:    migrations.ResourceUserInstanceResourceV0().CoreConfigSchema().ImpliedType(),
				Upgrade: migrations.ResourceUserInstanceStateUpgradeV0,
				Version: 0,
			},
		},

		Schema: map[string]*pluginsdk.Schema{
			"user_principal_name": {
				Description:  "The user principal name (UPN) of the user",
				Type:         pluginsdk.TypeString,
				Required:     true,
				ValidateFunc: validation.StringIsEmailAddress,
			},

			"display_name": {
				Description:  "The name to display in the address book for the user",
				Type:         pluginsdk.TypeString,
				Required:     true,
				ValidateFunc: validation.StringIsNotEmpty,
			},

			"account_enabled": {
				Description: "Whether or not the account should be enabled",
				Type:        pluginsdk.TypeBool,
				Optional:    true,
				Default:     true,
			},

			"age_group": {
				Description:  "The age group of the user",
				Type:         pluginsdk.TypeString,
				Optional:     true,
				ValidateFunc: validation.StringInSlice(possibleValuesForAgeGroup, false),
			},

			"business_phones": {
				Description: "The telephone numbers for the user. Only one number can be set for this property. Read-only for users synced with Azure AD Connect",
				Type:        pluginsdk.TypeList,
				Optional:    true,
				Computed:    true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"city": {
				Description: "The city in which the user is located",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"company_name": {
				Description: "The company name which the user is associated. This property can be useful for describing the company that an external user comes from",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"consent_provided_for_minor": {
				Description:  "Whether consent has been obtained for minors",
				Type:         pluginsdk.TypeString,
				Optional:     true,
				ValidateFunc: validation.StringInSlice(possibleValuesForConsentProvidedForMinor, false),
			},

			"cost_center": {
				Description: "The cost center associated with the user.",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"country": {
				Description: "The country/region in which the user is located, e.g. `US` or `UK`",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"department": {
				Description: "The name for the department in which the user works",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"division": {
				Description: "The name of the division in which the user works.",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"employee_hire_date": {
				Description:  "The hire date of the user, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`).",
				Type:         pluginsdk.TypeString,
				Optional:     true,
				ValidateFunc: validation.IsRFC3339Time,
			},

			"employee_id": {
				Description:  "The employee identifier assigned to the user by the organisation",
				Type:         pluginsdk.TypeString,
				Optional:     true,
				ValidateFunc: validation.StringLenBetween(0, 16),
			},

			"employee_type": {
				Description:  "Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor.",
				Type:         pluginsdk.TypeString,
				Optional:     true,
				ValidateFunc: validation.StringLenBetween(0, 64),
			},

			"force_password_change": {
				Description: "Whether the user is forced to change the password during the next sign-in. Only takes effect when also changing the password",
				Type:        pluginsdk.TypeBool,
				Optional:    true,
				Default:     false,
			},

			"given_name": {
				Description: "The given name (first name) of the user",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"fax_number": {
				Description: "The fax number of the user",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"job_title": {
				Description: "The userâ€™s job title",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"mail": {
				Description: "The SMTP address for the user. Cannot be unset.",
				Type:        pluginsdk.TypeString,
				Optional:    true,
				Computed:    true,
			},

			"mail_nickname": {
				Description: "The mail alias for the user. Defaults to the user name part of the user principal name (UPN)",
				Type:        pluginsdk.TypeString,
				Optional:    true,
				Computed:    true,
			},

			"manager_id": {
				Description: "The object ID of the user's manager",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"mobile_phone": {
				Description: "The primary cellular telephone number for the user",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"office_location": {
				Description: "The office location in the user's place of business",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"onpremises_immutable_id": {
				Description: "The value used to associate an on-premise Active Directory user account with their Azure AD user object. This must be specified if you are using a federated domain for the user's `user_principal_name` property when creating a new user account",
				Type:        pluginsdk.TypeString,
				Optional:    true,
				Computed:    true,
			},

			"other_mails": {
				Description: "Additional email addresses for the user",
				Type:        pluginsdk.TypeSet,
				Optional:    true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"password": {
				Description:  "The password for the user. The password must satisfy minimum requirements as specified by the password policy. The maximum length is 256 characters. This property is required when creating a new user",
				Type:         pluginsdk.TypeString,
				Optional:     true,
				Computed:     true,
				Sensitive:    true,
				ValidateFunc: validation.StringLenBetween(1, 256), // Currently the max length for AAD passwords is 256
			},

			"disable_strong_password": {
				Description: "Whether the user is allowed weaker passwords than the default policy to be specified.",
				Type:        pluginsdk.TypeBool,
				Optional:    true,
				Default:     false,
			},
			"disable_password_expiration": {
				Description: "Whether the users password is exempt from expiring",
				Type:        pluginsdk.TypeBool,
				Optional:    true,
				Default:     false,
			},

			"postal_code": {
				Description: "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"preferred_language": {
				Description:  "The user's preferred language, in ISO 639-1 notation",
				Type:         pluginsdk.TypeString,
				Optional:     true,
				ValidateFunc: validation.ISO639Language,
			},

			"show_in_address_list": {
				Description: "Whether or not the Outlook global address list should include this user",
				Type:        pluginsdk.TypeBool,
				Optional:    true,
				Default:     true,
			},

			"state": {
				Description: "The state or province in the user's address",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"street_address": {
				Description: "The street address of the user's place of business",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"surname": {
				Description: "The user's surname (family name or last name)",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"usage_location": {
				Description: "The usage location of the user. Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. The usage location is a two letter country code (ISO standard 3166). Examples include: `NO`, `JP`, and `GB`. Cannot be reset to null once set",
				Type:        pluginsdk.TypeString,
				Optional:    true,
			},

			"about_me": {
				Description: "A freeform field for the user to describe themselves",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},

			"object_id": {
				Description: "The object ID of the user",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},

			"creation_type": {
				Description: "Indicates whether the user account was created as a regular school or work account (`null`), an external account (`Invitation`), a local account for an Azure Active Directory B2C tenant (`LocalAccount`) or self-service sign-up using email verification (`EmailVerified`)",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},

			"external_user_state": {
				Description: "For an external user invited to the tenant, this property represents the invited user's invitation status",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},

			"im_addresses": {
				Description: "The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user",
				Type:        pluginsdk.TypeList,
				Computed:    true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"onpremises_distinguished_name": {
				Description: "The on-premise Active Directory distinguished name (DN) of the user",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},

			"onpremises_domain_name": {
				Description: "The on-premise FQDN (i.e. dnsDomainName) of the user",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},

			"onpremises_sam_account_name": {
				Description: "The on-premise SAM account name of the user",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},

			"onpremises_security_identifier": {
				Description: "The on-premise security identifier (SID) of the user",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},

			"onpremises_sync_enabled": {
				Description: "Whether this user is synchronized from an on-premises directory (true), no longer synchronized (false), or has never been synchronized (null)",
				Type:        pluginsdk.TypeBool,
				Computed:    true,
			},

			"onpremises_user_principal_name": {
				Description: "The on-premise user principal name of the user",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},

			"proxy_addresses": {
				Description: "Email addresses for the user that direct to the same mailbox",
				Type:        pluginsdk.TypeList,
				Computed:    true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"user_type": {
				Description: "The user type in the directory. Possible values are `Guest` or `Member`",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},
		},
	}
}
