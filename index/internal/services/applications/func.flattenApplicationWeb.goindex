package github.com/hashicorp/terraform-provider-azuread/internal/services/applications
import (
	"context"
	"encoding/base64"
	"fmt"
	"net/http"
	"reflect"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/pluginsdk"
	"github.com/manicminer/hamilton/msgraph"
)
func flattenApplicationWeb(in *msgraph.ApplicationWeb) []map[string]interface{} {
	if in == nil {
		return []map[string]interface{}{}
	}

	homepageUrl := ""
	if in.HomePageUrl != nil {
		homepageUrl = string(*in.HomePageUrl)
	}
	logoutUrl := ""
	if in.LogoutUrl != nil {
		logoutUrl = string(*in.LogoutUrl)
	}

	return []map[string]interface{}{{
		"homepage_url":   homepageUrl,
		"logout_url":     logoutUrl,
		"redirect_uris":  tf.FlattenStringSlicePtr(in.RedirectUris),
		"implicit_grant": flattenApplicationImplicitGrant(in.ImplicitGrantSettings),
	}}
}
