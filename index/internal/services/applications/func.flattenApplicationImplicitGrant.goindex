package github.com/hashicorp/terraform-provider-azuread/internal/services/applications
import (
	"context"
	"encoding/base64"
	"fmt"
	"net/http"
	"reflect"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/pluginsdk"
	"github.com/manicminer/hamilton/msgraph"
)
func flattenApplicationImplicitGrant(in *msgraph.ImplicitGrantSettings) []map[string]interface{} {
	if in == nil {
		return []map[string]interface{}{}
	}

	accessToken := false
	if in.EnableAccessTokenIssuance != nil {
		accessToken = *in.EnableAccessTokenIssuance
	}
	idToken := false
	if in.EnableIdTokenIssuance != nil {
		idToken = *in.EnableIdTokenIssuance
	}

	return []map[string]interface{}{{
		"access_token_issuance_enabled": accessToken,
		"id_token_issuance_enabled":     idToken,
	}}
}
