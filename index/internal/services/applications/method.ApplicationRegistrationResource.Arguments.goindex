package github.com/hashicorp/terraform-provider-azuread/internal/services/applications
import (
	"context"
	"fmt"
	"net/http"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers"
	"github.com/hashicorp/terraform-provider-azuread/internal/sdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/services/applications/parse"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/validation"
	"github.com/manicminer/hamilton/msgraph"
)
func (r ApplicationRegistrationResource) Arguments() map[string]*pluginsdk.Schema {
	return map[string]*pluginsdk.Schema{
		"display_name": {
			Description:  "The display name for the application",
			Type:         pluginsdk.TypeString,
			Required:     true,
			ValidateFunc: validation.StringIsNotEmpty,
		},

		"description": {
			Description:  "Description of the application as shown to end users",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validation.StringLenBetween(0, 1024),
		},

		"group_membership_claims": {
			Description: "Configures the `groups` claim that the app expects issued in a user or OAuth access token",
			Type:        pluginsdk.TypeSet,
			Optional:    true,
			Elem: &pluginsdk.Schema{
				Type: pluginsdk.TypeString,
				ValidateFunc: validation.StringInSlice([]string{
					msgraph.GroupMembershipClaimAll,
					msgraph.GroupMembershipClaimNone,
					msgraph.GroupMembershipClaimApplicationGroup,
					msgraph.GroupMembershipClaimDirectoryRole,
					msgraph.GroupMembershipClaimSecurityGroup,
				}, false),
			},
		},

		"homepage_url": {
			Description:  "URL of the home page for the application",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validation.IsHttpOrHttpsUrl,
		},

		"implicit_access_token_issuance_enabled": {
			Description: "Whether this application can request an access token using OAuth implicit flow",
			Type:        pluginsdk.TypeBool,
			Optional:    true,
		},

		"implicit_id_token_issuance_enabled": {
			Description: "Whether this application can request an ID token using OAuth implicit flow",
			Type:        pluginsdk.TypeBool,
			Optional:    true,
		},

		"logout_url": {
			Description:  "URL of the logout page for the application, where the session is cleared for single sign-out",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validation.IsLogoutUrl,
		},

		"marketing_url": {
			Description:  "URL of the marketing page for the application",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validation.IsHttpOrHttpsUrl,
		},

		"notes": {
			Description:  "User-specified notes relevant for the management of the application",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validation.StringIsNotEmpty,
		},

		"privacy_statement_url": {
			Description:  "URL of the privacy statement for the application",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validation.IsHttpOrHttpsUrl,
		},

		"requested_access_token_version": {
			Description:  "The access token version expected by this resource",
			Type:         pluginsdk.TypeInt,
			Optional:     true,
			Default:      2,
			ValidateFunc: validation.IntBetween(1, 2),
		},

		"service_management_reference": {
			Description:  "References application or contact information from a service or asset management database",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validation.StringIsNotEmpty,
		},

		"sign_in_audience": {
			Description: "The Microsoft account types that are supported for the current application",
			Type:        pluginsdk.TypeString,
			Optional:    true,
			Default:     msgraph.SignInAudienceAzureADMyOrg,
			ValidateFunc: validation.StringInSlice([]string{
				msgraph.SignInAudienceAzureADMyOrg,
				msgraph.SignInAudienceAzureADMultipleOrgs,
				msgraph.SignInAudienceAzureADandPersonalMicrosoftAccount,
				msgraph.SignInAudiencePersonalMicrosoftAccount,
			}, false),
		},

		"support_url": {
			Description:  "URL of the support page for the application",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validation.IsHttpOrHttpsUrl,
		},

		"terms_of_service_url": {
			Description:  "URL of the terms of service statement for the application",
			Type:         pluginsdk.TypeString,
			Optional:     true,
			ValidateFunc: validation.IsHttpOrHttpsUrl,
		},
	}
}
