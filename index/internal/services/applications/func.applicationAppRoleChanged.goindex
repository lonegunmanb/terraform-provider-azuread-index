package github.com/hashicorp/terraform-provider-azuread/internal/services/applications
import (
	"context"
	"encoding/base64"
	"fmt"
	"net/http"
	"reflect"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/applications/stable/application"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	"github.com/hashicorp/go-azure-sdk/sdk/client"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/applications"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/credentials"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/pluginsdk"
)
func applicationAppRoleChanged(existingRole stable.AppRole, newRole stable.AppRole) bool {
	if !reflect.DeepEqual(existingRole.AllowedMemberTypes, newRole.AllowedMemberTypes) {
		return true
	}
	if !reflect.DeepEqual(existingRole.Description, newRole.Description) {
		return true
	}
	if !reflect.DeepEqual(existingRole.DisplayName, newRole.DisplayName) {
		return true
	}

	if reflect.DeepEqual(existingRole.Value, newRole.Value) {
		return false
	}

	// We consider unset/null to be equivalent to the zero value
	if existingRole.Value.GetOrZero() == newRole.Value.GetOrZero() {
		return false
	}

	return true
}
