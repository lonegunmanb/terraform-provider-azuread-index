package github.com/hashicorp/terraform-provider-azuread/internal/services/applications/migrations
import (
	"context"
	"fmt"
	"log"

	"github.com/hashicorp/go-uuid"
	"github.com/hashicorp/terraform-provider-azuread/internal/services/applications/parse"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/pluginsdk"
	"github.com/manicminer/hamilton/msgraph"
)
func ResourceApplicationInstanceResourceV1() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		Schema: map[string]*pluginsdk.Schema{
			"display_name": {
				Type:     pluginsdk.TypeString,
				Required: true,
			},

			"api": {
				Type:     pluginsdk.TypeList,
				Optional: true,
				MaxItems: 1,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"known_client_applications": {
							Type:     pluginsdk.TypeSet,
							Optional: true,
							Elem: &pluginsdk.Schema{
								Type: pluginsdk.TypeString,
							},
						},

						"mapped_claims_enabled": {
							Type:     pluginsdk.TypeBool,
							Optional: true,
						},

						"oauth2_permission_scope": {
							Type:     pluginsdk.TypeSet,
							Optional: true,
							Elem: &pluginsdk.Resource{
								Schema: map[string]*pluginsdk.Schema{
									"id": {
										Type:     pluginsdk.TypeString,
										Required: true,
									},

									"admin_consent_description": {
										Type:     pluginsdk.TypeString,
										Optional: true,
									},

									"admin_consent_display_name": {
										Type:     pluginsdk.TypeString,
										Optional: true,
									},

									"enabled": {
										Type:     pluginsdk.TypeBool,
										Optional: true,
										Default:  true,
									},

									"type": {
										Type:     pluginsdk.TypeString,
										Optional: true,
										Default:  msgraph.PermissionScopeTypeUser,
									},

									"user_consent_description": {
										Type:     pluginsdk.TypeString,
										Optional: true,
									},

									"user_consent_display_name": {
										Type:     pluginsdk.TypeString,
										Optional: true,
									},

									"value": {
										Type:     pluginsdk.TypeString,
										Optional: true,
									},
								},
							},
						},

						"requested_access_token_version": {
							Type:     pluginsdk.TypeInt,
							Optional: true,
							Default:  1,
						},
					},
				},
			},

			"app_role": {
				Type:     pluginsdk.TypeSet,
				Optional: true,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"id": {
							Type:     pluginsdk.TypeString,
							Required: true,
						},

						"allowed_member_types": {
							Type:     pluginsdk.TypeSet,
							Required: true,
							MinItems: 1,
							Elem: &pluginsdk.Schema{
								Type: pluginsdk.TypeString,
							},
						},

						"description": {
							Type:     pluginsdk.TypeString,
							Required: true,
						},

						"display_name": {
							Type:     pluginsdk.TypeString,
							Required: true,
						},

						"enabled": {
							Type:     pluginsdk.TypeBool,
							Optional: true,
							Default:  true,
						},

						"value": {
							Type:     pluginsdk.TypeString,
							Optional: true,
						},
					},
				},
			},

			"app_role_ids": {
				Type:     pluginsdk.TypeMap,
				Computed: true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"description": {
				Type:     pluginsdk.TypeString,
				Optional: true,
			},

			"device_only_auth_enabled": {
				Type:     pluginsdk.TypeBool,
				Optional: true,
			},

			"fallback_public_client_enabled": {
				Type:     pluginsdk.TypeBool,
				Optional: true,
			},

			"feature_tags": {
				Type:          pluginsdk.TypeList,
				Optional:      true,
				Computed:      true,
				ConflictsWith: []string{"tags"},
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"custom_single_sign_on": {
							Type:     pluginsdk.TypeBool,
							Optional: true,
						},

						"enterprise": {
							Type:     pluginsdk.TypeBool,
							Optional: true,
						},

						"gallery": {
							Type:     pluginsdk.TypeBool,
							Optional: true,
						},

						"hide": {
							Type:     pluginsdk.TypeBool,
							Optional: true,
						},
					},
				},
			},

			"group_membership_claims": {
				Type:     pluginsdk.TypeSet,
				Optional: true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"identifier_uris": {
				Type:     pluginsdk.TypeSet,
				Optional: true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"logo_image": {
				Type:     pluginsdk.TypeString,
				Optional: true,
			},

			"marketing_url": {
				Type:     pluginsdk.TypeString,
				Optional: true,
			},

			"notes": {
				Type:     pluginsdk.TypeString,
				Optional: true,
			},

			"oauth2_permission_scope_ids": {
				Type:     pluginsdk.TypeMap,
				Computed: true,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"oauth2_post_response_required": {
				Type:     pluginsdk.TypeBool,
				Optional: true,
			},

			"optional_claims": {
				Type:     pluginsdk.TypeList,
				Optional: true,
				MaxItems: 1,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"access_token": {
							Type:     pluginsdk.TypeList,
							Optional: true,
							Elem: &pluginsdk.Resource{
								Schema: map[string]*pluginsdk.Schema{
									"name": {
										Type:     pluginsdk.TypeString,
										Required: true,
									},

									"source": {
										Type:     pluginsdk.TypeString,
										Optional: true,
									},

									"essential": {
										Type:     pluginsdk.TypeBool,
										Optional: true,
										Default:  false,
									},

									"additional_properties": {
										Type:     pluginsdk.TypeList,
										Optional: true,
										Elem: &pluginsdk.Schema{
											Type: pluginsdk.TypeString,
										},
									},
								},
							},
						},
						"id_token": {
							Type:     pluginsdk.TypeList,
							Optional: true,
							Elem: &pluginsdk.Resource{
								Schema: map[string]*pluginsdk.Schema{
									"name": {
										Type:     pluginsdk.TypeString,
										Required: true,
									},

									"source": {
										Type:     pluginsdk.TypeString,
										Optional: true,
									},

									"essential": {
										Type:     pluginsdk.TypeBool,
										Optional: true,
										Default:  false,
									},

									"additional_properties": {
										Type:     pluginsdk.TypeList,
										Optional: true,
										Elem: &pluginsdk.Schema{
											Type: pluginsdk.TypeString,
										},
									},
								},
							},
						},
						"saml2_token": {
							Type:     pluginsdk.TypeList,
							Optional: true,
							Elem: &pluginsdk.Resource{
								Schema: map[string]*pluginsdk.Schema{
									"name": {
										Type:     pluginsdk.TypeString,
										Required: true,
									},

									"source": {
										Type:     pluginsdk.TypeString,
										Optional: true,
									},

									"essential": {
										Type:     pluginsdk.TypeBool,
										Optional: true,
										Default:  false,
									},

									"additional_properties": {
										Type:     pluginsdk.TypeList,
										Optional: true,
										Elem: &pluginsdk.Schema{
											Type: pluginsdk.TypeString,
										},
									},
								},
							},
						},
					},
				},
			},

			"owners": {
				Type:     pluginsdk.TypeSet,
				Optional: true,
				Set:      pluginsdk.HashString,
				MaxItems: 100,
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"privacy_statement_url": {
				Type:     pluginsdk.TypeString,
				Optional: true,
			},

			"public_client": {
				Type:     pluginsdk.TypeList,
				Optional: true,
				MaxItems: 1,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"redirect_uris": {
							Type:     pluginsdk.TypeSet,
							Optional: true,
							MaxItems: 256,
							Elem: &pluginsdk.Schema{
								Type: pluginsdk.TypeString,
							},
						},
					},
				},
			},

			"required_resource_access": {
				Type:     pluginsdk.TypeSet,
				Optional: true,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"resource_app_id": {
							Type:     pluginsdk.TypeString,
							Required: true,
						},

						"resource_access": {
							Type:     pluginsdk.TypeList,
							Required: true,
							Elem: &pluginsdk.Resource{
								Schema: map[string]*pluginsdk.Schema{
									"id": {
										Type:     pluginsdk.TypeString,
										Required: true,
									},

									"type": {
										Type:     pluginsdk.TypeString,
										Required: true,
									},
								},
							},
						},
					},
				},
			},

			"service_management_reference": {
				Type:     pluginsdk.TypeString,
				Optional: true,
			},

			"sign_in_audience": {
				Type:     pluginsdk.TypeString,
				Optional: true,
				Default:  msgraph.SignInAudienceAzureADMyOrg,
			},

			"single_page_application": {
				Type:     pluginsdk.TypeList,
				Optional: true,
				MaxItems: 1,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"redirect_uris": {
							Type:     pluginsdk.TypeSet,
							Optional: true,
							MaxItems: 256,
							Elem: &pluginsdk.Schema{
								Type: pluginsdk.TypeString,
							},
						},
					},
				},
			},

			"support_url": {
				Type:     pluginsdk.TypeString,
				Optional: true,
			},

			"tags": {
				Type:          pluginsdk.TypeSet,
				Optional:      true,
				Computed:      true,
				Set:           pluginsdk.HashString,
				ConflictsWith: []string{"feature_tags"},
				Elem: &pluginsdk.Schema{
					Type: pluginsdk.TypeString,
				},
			},

			"template_id": {
				Type:     pluginsdk.TypeString,
				Optional: true,
				Computed: true,
				ForceNew: true,
			},

			"terms_of_service_url": {
				Type:     pluginsdk.TypeString,
				Optional: true,
			},

			"web": {
				Type:     pluginsdk.TypeList,
				Optional: true,
				MaxItems: 1,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"homepage_url": {
							Type:     pluginsdk.TypeString,
							Optional: true,
						},

						"logout_url": {
							Type:     pluginsdk.TypeString,
							Optional: true,
						},

						"redirect_uris": {
							Type:     pluginsdk.TypeSet,
							Optional: true,
							MaxItems: 256,
							Elem: &pluginsdk.Schema{
								Type: pluginsdk.TypeString,
							},
						},

						"implicit_grant": {
							Type:     pluginsdk.TypeList,
							Optional: true,
							MaxItems: 1,
							Elem: &pluginsdk.Resource{
								Schema: map[string]*pluginsdk.Schema{
									"access_token_issuance_enabled": {
										Type:     pluginsdk.TypeBool,
										Optional: true,
									},

									"id_token_issuance_enabled": {
										Type:     pluginsdk.TypeBool,
										Optional: true,
									},
								},
							},
						},
					},
				},
			},

			"application_id": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"client_id": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"object_id": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"logo_url": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"prevent_duplicate_names": {
				Type:     pluginsdk.TypeBool,
				Optional: true,
				Default:  false,
			},

			"publisher_domain": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},

			"disabled_by_microsoft": {
				Type:     pluginsdk.TypeString,
				Computed: true,
			},
		},
	}
}
