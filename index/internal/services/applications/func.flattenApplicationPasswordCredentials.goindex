package github.com/hashicorp/terraform-provider-azuread/internal/services/applications
import (
	"context"
	"encoding/base64"
	"fmt"
	"net/http"
	"reflect"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/applications/stable/application"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	"github.com/hashicorp/go-azure-sdk/sdk/client"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/applications"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/credentials"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/pluginsdk"
)
func flattenApplicationPasswordCredentials(input *[]stable.PasswordCredential) []map[string]interface{} {
	output := make([]map[string]interface{}, 0)

	if input == nil {
		return output
	}

	for _, in := range *input {
		output = append(output, map[string]interface{}{
			"key_id":       in.KeyId.GetOrZero(),
			"display_name": in.DisplayName.GetOrZero(),
			"start_date":   in.StartDateTime.GetOrZero(),
			"end_date":     in.EndDateTime.GetOrZero(),
			"value":        in.SecretText.GetOrZero(),
		})
	}

	return output
}
