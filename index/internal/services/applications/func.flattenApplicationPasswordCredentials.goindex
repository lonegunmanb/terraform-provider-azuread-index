package github.com/hashicorp/terraform-provider-azuread/internal/services/applications
import (
	"context"
	"encoding/base64"
	"fmt"
	"net/http"
	"reflect"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/pluginsdk"
	"github.com/manicminer/hamilton/msgraph"
)
func flattenApplicationPasswordCredentials(input *[]msgraph.PasswordCredential) []map[string]interface{} {
	output := make([]map[string]interface{}, 0)

	if input == nil {
		return output
	}

	for _, in := range *input {
		var startDate, endDate string

		if in.StartDateTime != nil {
			startDate = in.StartDateTime.Format(time.RFC3339)
		}

		if in.EndDateTime != nil {
			endDate = in.EndDateTime.Format(time.RFC3339)
		}

		output = append(output, map[string]interface{}{
			"key_id":       pointer.From(in.KeyId),
			"display_name": pointer.From(in.DisplayName),
			"start_date":   startDate,
			"end_date":     endDate,
			"value":        pointer.From(in.SecretText),
		})
	}

	return output
}
