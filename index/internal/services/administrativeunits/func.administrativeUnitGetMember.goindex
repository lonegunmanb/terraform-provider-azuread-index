package github.com/hashicorp/terraform-provider-azuread/internal/services/administrativeunits
import (
	"context"
	"fmt"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/directory/stable/administrativeunit"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/directory/stable/administrativeunitmember"
)
func administrativeUnitGetMember(ctx context.Context, client *administrativeunitmember.AdministrativeUnitMemberClient, id stable.DirectoryAdministrativeUnitIdMemberId) (*stable.DirectoryObject, error) {
	options := administrativeunitmember.ListAdministrativeUnitMembersOperationOptions{
		Filter: pointer.To(fmt.Sprintf("id eq '%s'", id.DirectoryObjectId)),
	}

	resp, err := client.ListAdministrativeUnitMembers(ctx, stable.NewDirectoryAdministrativeUnitID(id.AdministrativeUnitId), options)
	if err != nil {
		if response.WasNotFound(resp.HttpResponse) {
			return nil, nil
		} else {
			return nil, err
		}
	}

	if resp.Model != nil {
		for _, member := range *resp.Model {
			if member.DirectoryObject().Id != nil && *member.DirectoryObject().Id == id.DirectoryObjectId {
				return &member, nil
			}
		}
	}

	return nil, nil
}
