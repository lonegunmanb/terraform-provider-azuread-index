package github.com/hashicorp/terraform-provider-azuread/internal/services/conditionalaccess
import (
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/pluginsdk"
)
func expandExternalTenants(in []interface{}) stable.ConditionalAccessExternalTenants {
	if len(in) == 0 || in[0] == nil {
		return nil
	}

	config := in[0].(map[string]interface{})

	members := config["members"].([]interface{})
	membershipKind := stable.ConditionalAccessExternalTenantsMembershipKind(config["membership_kind"].(string))

	// only membership_kind enumerated is allowed to have members field set
	if membershipKind == stable.ConditionalAccessExternalTenantsMembershipKind_Enumerated {
		result := stable.ConditionalAccessEnumeratedExternalTenants{}

		result.MembershipKind = pointer.To(membershipKind)
		result.Members = tf.ExpandStringSlicePtr(members)

		return &result
	}

	result := stable.BaseConditionalAccessExternalTenantsImpl{}
	result.MembershipKind = pointer.To(membershipKind)

	return &result
}
