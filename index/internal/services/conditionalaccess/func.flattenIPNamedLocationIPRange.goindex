package github.com/hashicorp/terraform-provider-azuread/internal/services/conditionalaccess
import (
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/pluginsdk"
)
func flattenIPNamedLocationIPRange(in []stable.IPRange) []interface{} {
	if len(in) == 0 {
		return []interface{}{}
	}

	result := make([]string, 0)
	for _, i := range in {
		switch model := i.(type) {
		case stable.IPv4CIDRRange:
			if model.CIDRAddress != nil {
				result = append(result, *model.CIDRAddress)
			}
		case stable.IPv6CIDRRange:
			if model.CIDRAddress != nil {
				result = append(result, *model.CIDRAddress)
			}
		}
	}

	return tf.FlattenStringSlice(result)
}
