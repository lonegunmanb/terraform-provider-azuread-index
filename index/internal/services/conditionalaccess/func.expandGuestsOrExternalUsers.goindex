package github.com/hashicorp/terraform-provider-azuread/internal/services/conditionalaccess
import (
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/pluginsdk"
)
func expandGuestsOrExternalUsers(in []interface{}) *stable.ConditionalAccessGuestsOrExternalUsers {
	if len(in) == 0 || in[0] == nil {
		return nil
	}

	config := in[0].(map[string]interface{})
	result := stable.ConditionalAccessGuestsOrExternalUsers{}

	var guestOrExternalUserTypes *stable.ConditionalAccessGuestOrExternalUserTypes
	if len(config["guest_or_external_user_types"].([]interface{})) > 0 {
		values := strings.Join(tf.ExpandStringSlice(config["guest_or_external_user_types"].([]interface{})), ",")
		guestOrExternalUserTypes = pointer.To(stable.ConditionalAccessGuestOrExternalUserTypes(values))
	}

	result.GuestOrExternalUserTypes = guestOrExternalUserTypes
	result.ExternalTenants = expandExternalTenants(config["external_tenants"].([]interface{}))

	return &result
}
