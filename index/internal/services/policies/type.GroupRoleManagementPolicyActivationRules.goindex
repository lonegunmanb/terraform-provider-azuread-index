package github.com/hashicorp/terraform-provider-azuread/internal/services/policies
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/policies/stable/rolemanagementpolicy"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/policies/stable/rolemanagementpolicyassignment"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/validation"
	"github.com/hashicorp/terraform-provider-azuread/internal/sdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/services/policies/parse"
)
type GroupRoleManagementPolicyActivationRules struct {
	ApprovalStages                  []GroupRoleManagementPolicyApprovalStage `tfschema:"approval_stage"`
	MaximumDuration                 string                                   `tfschema:"maximum_duration"`
	RequireApproval                 bool                                     `tfschema:"require_approval"`
	RequireConditionalAccessContext string                                   `tfschema:"required_conditional_access_authentication_context"`
	RequireJustification            bool                                     `tfschema:"require_justification"`
	RequireMultiFactorAuth          bool                                     `tfschema:"require_multifactor_authentication"`
	RequireTicketInfo               bool                                     `tfschema:"require_ticket_info"`
}
