package github.com/hashicorp/terraform-provider-azuread/internal/services/policies/parse
import (
	"fmt"
	"strings"

	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/validation"
)
func ParseRoleManagementPolicyID(input string) (*RoleManagementPolicyId, error) {
	parts := strings.Split(input, "_")
	if len(parts) != 3 {
		return nil, fmt.Errorf("parsing RoleManagementPolicyId: invalid format")
	}

	id := RoleManagementPolicyId{
		ScopeType: parts[0],
		ScopeId:   parts[1],
		PolicyId:  parts[2],
	}

	if _, err := validation.IsUUID(id.ScopeId, "ScopeId"); len(err) > 0 {
		return nil, fmt.Errorf("parsing RoleManagementPolicyId ScopeId: %+v", err)
	}

	if _, err := validation.IsUUID(id.PolicyId, "PolicyId"); len(err) > 0 {
		return nil, fmt.Errorf("parsing RoleManagementPolicyId PolicyId: %+v", err)
	}

	if id.ScopeType != scopeTypeDirectory &&
		id.ScopeType != scopeTypeDirectoryRole &&
		id.ScopeType != scopeTypeGroup {
		return nil, fmt.Errorf("parsing RoleManagementPolicyId: invalid ScopeType")
	}

	return &id, nil
}
