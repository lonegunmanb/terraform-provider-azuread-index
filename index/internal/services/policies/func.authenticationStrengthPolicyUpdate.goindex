package github.com/hashicorp/terraform-provider-azuread/internal/services/policies
import (
	"context"
	"errors"
	"fmt"
	"log"
	"net/http"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/go-uuid"
	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-provider-azuread/internal/clients"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/validation"
	"github.com/manicminer/hamilton/msgraph"
)
func authenticationStrengthPolicyUpdate(ctx context.Context, d *pluginsdk.ResourceData, meta interface{}) diag.Diagnostics {
	client := meta.(*clients.Client).Policies.AuthenticationStrengthPoliciesClient

	properties := msgraph.AuthenticationStrengthPolicy{
		ID:          pointer.To(d.Id()),
		DisplayName: pointer.To(d.Get("display_name").(string)),
		Description: pointer.To(d.Get("description").(string)),
	}

	_, err := client.Update(ctx, properties)
	if err != nil {
		return tf.ErrorDiagF(err, "Could not update authentication strength policy")
	}

	if d.HasChange("allowed_combinations") {
		properties.AllowedCombinations = tf.ExpandStringSlicePtr(d.Get("allowed_combinations").(*pluginsdk.Set).List())
		_, err := client.UpdateAllowedCombinations(ctx, properties)
		if err != nil {
			return tf.ErrorDiagF(err, "Could not update authentication strength policy allowed combinations")
		}
	}

	return authenticationStrengthPolicyRead(ctx, d, meta)
}
