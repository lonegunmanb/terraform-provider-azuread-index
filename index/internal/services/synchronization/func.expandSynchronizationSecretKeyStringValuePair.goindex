package github.com/hashicorp/terraform-provider-azuread/internal/services/synchronization
import (
	"net/http"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	"github.com/hashicorp/go-azure-sdk/sdk/client"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
)
func expandSynchronizationSecretKeyStringValuePair(in []interface{}) *[]stable.SynchronizationSecretKeyStringValuePair {
	result := make([]stable.SynchronizationSecretKeyStringValuePair, 0)

	for _, raw := range in {
		if raw == nil {
			continue
		}
		item := raw.(map[string]interface{})

		result = append(result, stable.SynchronizationSecretKeyStringValuePair{
			Key:   pointer.To(stable.SynchronizationSecret(item["key"].(string))),
			Value: nullable.Value(item["value"].(string)),
		})
	}

	return &result
}
