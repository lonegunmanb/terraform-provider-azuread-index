package github.com/hashicorp/terraform-provider-azuread/internal/services/synchronization
import (
	"net/http"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
	"github.com/hashicorp/go-azure-sdk/sdk/client"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
)
func flattenSynchronizationSchedule(in *stable.SynchronizationSchedule) []map[string]interface{} {
	if in == nil {
		return []map[string]interface{}{}
	}

	return []map[string]interface{}{{
		"expiration": in.Expiration.GetOrZero(),
		"interval":   pointer.From(in.Interval),
		"state":      pointer.From(in.State),
	}}
}
