package github.com/hashicorp/terraform-provider-azuread/internal/services/serviceprincipals
import (
	"context"
	"crypto/sha1"
	"encoding/base64"
	"errors"
	"fmt"
	"net/http"
	"strings"
	"time"

	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/clients"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/validation"
	"github.com/manicminer/hamilton/msgraph"
)
func servicePrincipalsDataSource() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		ReadContext: servicePrincipalsDataSourceRead,

		Timeouts: &pluginsdk.ResourceTimeout{
			Read: pluginsdk.DefaultTimeout(5 * time.Minute),
		},

		Schema: map[string]*pluginsdk.Schema{
			"client_ids": {
				Description:  "The client IDs of the applications associated with the service principals",
				Type:         pluginsdk.TypeList,
				Optional:     true,
				Computed:     true,
				ExactlyOneOf: []string{"client_ids", "application_ids", "display_names", "object_ids", "return_all"},
				Elem: &pluginsdk.Schema{
					Type:         pluginsdk.TypeString,
					ValidateFunc: validation.IsUUID,
				},
			},

			"application_ids": {
				Description:  "The application IDs (client IDs) of the applications associated with the service principals",
				Type:         pluginsdk.TypeList,
				Optional:     true,
				Computed:     true,
				ExactlyOneOf: []string{"client_ids", "application_ids", "display_names", "object_ids", "return_all"},
				Elem: &pluginsdk.Schema{
					Type:         pluginsdk.TypeString,
					ValidateFunc: validation.IsUUID,
				},
				Deprecated: "The `application_ids` property has been replaced with the `client_ids` property and will be removed in version 3.0 of the AzureAD provider",
			},

			"display_names": {
				Description:  "The display names of the applications associated with the service principals",
				Type:         pluginsdk.TypeList,
				Optional:     true,
				Computed:     true,
				ExactlyOneOf: []string{"client_ids", "application_ids", "display_names", "object_ids", "return_all"},
				Elem: &pluginsdk.Schema{
					Type:         pluginsdk.TypeString,
					ValidateFunc: validation.StringIsNotEmpty,
				},
			},

			"object_ids": {
				Description:  "The object IDs of the service principals",
				Type:         pluginsdk.TypeList,
				Optional:     true,
				Computed:     true,
				ExactlyOneOf: []string{"client_ids", "application_ids", "display_names", "object_ids", "return_all"},
				Elem: &pluginsdk.Schema{
					Type:         pluginsdk.TypeString,
					ValidateFunc: validation.IsUUID,
				},
			},

			"ignore_missing": {
				Description:   "Ignore missing service principals and return the service principals that were found. The data source will still fail if no service principals are found",
				Type:          pluginsdk.TypeBool,
				Optional:      true,
				Default:       false,
				ConflictsWith: []string{"return_all"},
			},

			"return_all": {
				Description:   "Fetch all service principals with no filter and return all that were found. The data source will still fail if no service principals are found.",
				Type:          pluginsdk.TypeBool,
				Optional:      true,
				Default:       false,
				ConflictsWith: []string{"ignore_missing"},
				ExactlyOneOf:  []string{"client_ids", "application_ids", "display_names", "object_ids", "return_all"},
			},

			"service_principals": {
				Description: "A list of service_principals",
				Type:        pluginsdk.TypeList,
				Computed:    true,
				Elem: &pluginsdk.Resource{
					Schema: map[string]*pluginsdk.Schema{
						"account_enabled": {
							Description: "Whether or not the service principal account is enabled",
							Type:        pluginsdk.TypeBool,
							Computed:    true,
						},

						"app_role_assignment_required": {
							Description: "Whether this service principal requires an app role assignment to a user or group before Azure AD will issue a user or access token to the application",
							Type:        pluginsdk.TypeBool,
							Computed:    true,
						},

						"application_id": {
							Description: "The application ID (client ID) for the associated application",
							Type:        pluginsdk.TypeString,
							Computed:    true,
							Deprecated:  "The `application_id` attribute has been replaced by the `client_id` attribute and will be removed in version 3.0 of the AzureAD provider",
						},

						"application_tenant_id": {
							Description: "The tenant ID where the associated application is registered",
							Type:        pluginsdk.TypeString,
							Computed:    true,
						},

						"client_id": {
							Description: "The application ID (client ID) for the associated application",
							Type:        pluginsdk.TypeString,
							Computed:    true,
						},

						"display_name": {
							Description: "The display name of the application associated with this service principal",
							Type:        pluginsdk.TypeString,
							Computed:    true,
						},

						"object_id": {
							Description: "The object ID of the service principal",
							Type:        pluginsdk.TypeString,
							Computed:    true,
						},

						"preferred_single_sign_on_mode": {
							Description: "The single sign-on mode configured for this application. Azure AD uses the preferred single sign-on mode to launch the application from Microsoft 365 or the Azure AD My Apps",
							Type:        pluginsdk.TypeString,
							Computed:    true,
						},

						"saml_metadata_url": {
							Description: "The URL where the service exposes SAML metadata for federation",
							Type:        pluginsdk.TypeString,
							Computed:    true,
						},

						"service_principal_names": {
							Description: "A list of identifier URI(s), copied over from the associated application",
							Type:        pluginsdk.TypeList,
							Computed:    true,
							Elem: &pluginsdk.Schema{
								Type: pluginsdk.TypeString,
							},
						},

						"sign_in_audience": {
							Description: "The Microsoft account types that are supported for the associated application",
							Type:        pluginsdk.TypeString,
							Computed:    true,
						},

						"tags": {
							Description: "A set of tags to apply to the service principal",
							Type:        pluginsdk.TypeList,
							Computed:    true,
							Elem: &pluginsdk.Schema{
								Type: pluginsdk.TypeString,
							},
						},

						"type": {
							Description: "Identifies whether the service principal represents an application or a managed identity",
							Type:        pluginsdk.TypeString,
							Computed:    true,
						},
					},
				},
			},
		},
	}
}
