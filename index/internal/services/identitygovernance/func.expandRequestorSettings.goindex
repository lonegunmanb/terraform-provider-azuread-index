package github.com/hashicorp/terraform-provider-azuread/internal/services/identitygovernance
import (
	"context"
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/beta"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/identitygovernance/beta/entitlementmanagementaccesspackage"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"golang.org/x/text/cases"
	"golang.org/x/text/language"
)
func expandRequestorSettings(input []interface{}) (*beta.RequestorSettings, error) {
	if len(input) == 0 {
		return nil, nil
	}
	in := input[0].(map[string]interface{})
	result := beta.RequestorSettings{
		ScopeType:      nullable.NoZero(in["scope_type"].(string)),
		AcceptRequests: nullable.NoZero(in["requests_accepted"].(bool)),
	}

	if _, ok := in["requestor"]; ok {
		allowedRequestors, err := expandUserSets(in["requestor"].([]interface{}))
		if err != nil {
			return nil, fmt.Errorf("building `requestor`: %v", err)
		}
		result.AllowedRequestors = allowedRequestors
	}

	return &result, nil
}
