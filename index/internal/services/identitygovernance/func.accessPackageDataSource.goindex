package github.com/hashicorp/terraform-provider-azuread/internal/services/identitygovernance
import (
	"context"
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/hashicorp/terraform-provider-azuread/internal/clients"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/tf/validation"
	"github.com/manicminer/hamilton/msgraph"
)
func accessPackageDataSource() *pluginsdk.Resource {
	return &pluginsdk.Resource{
		ReadContext: accessPackageDataRead,

		Timeouts: &pluginsdk.ResourceTimeout{
			Read: pluginsdk.DefaultTimeout(5 * time.Minute),
		},

		Schema: map[string]*pluginsdk.Schema{
			"object_id": {
				Description:  "The ID of this access package",
				Type:         pluginsdk.TypeString,
				Optional:     true,
				Computed:     true,
				ValidateFunc: validation.IsUUID,
				AtLeastOneOf: []string{"object_id", "display_name", "catalog_id"},
			},

			"display_name": {
				Description:   "The display name of the access package",
				Type:          pluginsdk.TypeString,
				Optional:      true,
				Computed:      true,
				AtLeastOneOf:  []string{"object_id", "display_name", "catalog_id"},
				ConflictsWith: []string{"object_id"},
				RequiredWith:  []string{"catalog_id"},
			},

			"catalog_id": {
				Description:   "The ID of the Catalog this access package is in",
				Type:          pluginsdk.TypeString,
				Optional:      true,
				AtLeastOneOf:  []string{"object_id", "display_name", "catalog_id"},
				ConflictsWith: []string{"object_id"},
				RequiredWith:  []string{"display_name"},
			},

			"description": {
				Description: "The description of the access package",
				Type:        pluginsdk.TypeString,
				Computed:    true,
			},

			"hidden": {
				Description: "Whether the access package is hidden from the requestor",
				Type:        pluginsdk.TypeBool,
				Computed:    true,
			},
		},
	}
}
