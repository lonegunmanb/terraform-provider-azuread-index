package github.com/hashicorp/terraform-provider-azuread/internal/services/identitygovernance
import (
	"context"
	"errors"
	"fmt"
	"log"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/beta"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/identitygovernance/beta/entitlementmanagementaccesspackage"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/identitygovernance/beta/entitlementmanagementaccesspackageassignmentpolicy"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/go-uuid"
	"github.com/hashicorp/terraform-provider-azuread/internal/clients"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/consistency"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/pluginsdk"
	"github.com/hashicorp/terraform-provider-azuread/internal/helpers/tf/validation"
)
func buildAssignmentPolicyResourceData(ctx context.Context, d *pluginsdk.ResourceData, meta interface{}) (*beta.AccessPackageAssignmentPolicy, error) {
	accessPackageClient := meta.(*clients.Client).IdentityGovernance.AccessPackageClient
	id := beta.NewIdentityGovernanceEntitlementManagementAccessPackageID(d.Get("access_package_id").(string))

	resp, err := accessPackageClient.GetEntitlementManagementAccessPackage(ctx, id, entitlementmanagementaccesspackage.DefaultGetEntitlementManagementAccessPackageOperationOptions())
	if err != nil {
		if response.WasNotFound(resp.HttpResponse) {
			log.Printf("[DEBUG] %s was not found - removing from state!", id)
		}

		return nil, fmt.Errorf("retrieving %s: %v", id, err)
	}

	properties := beta.AccessPackageAssignmentPolicy{
		AccessPackageId:    nullable.NoZero(d.Get("access_package_id").(string)),
		CanExtend:          nullable.Value(d.Get("extension_enabled").(bool)),
		Description:        nullable.NoZero(d.Get("description").(string)),
		DisplayName:        nullable.NoZero(d.Get("display_name").(string)),
		DurationInDays:     nullable.Value(int64(d.Get("duration_in_days").(int))),
		ExpirationDateTime: nullable.NoZero(d.Get("expiration_date").(string)),
		Questions:          expandAccessPackageQuestions(d.Get("question").([]interface{})),
	}

	requestApprovalSettings, err := expandApprovalSettings(d.Get("approval_settings").([]interface{}))
	if err != nil {
		return nil, fmt.Errorf("expanding `approval_settings`: %v", err)
	}
	properties.RequestApprovalSettings = requestApprovalSettings

	requestorSettings, err := expandRequestorSettings(d.Get("requestor_settings").([]interface{}))
	if err != nil {
		return nil, fmt.Errorf("building `requestor_settings`: %v", err)
	}
	properties.RequestorSettings = requestorSettings

	reviewSettings, err := expandAssignmentReviewSettings(d.Get("assignment_review_settings").([]interface{}))
	if err != nil {
		return nil, fmt.Errorf("building `assignment_review_settings`: %v", err)
	}
	properties.AccessReviewSettings = reviewSettings

	return &properties, nil
}
