package github.com/hashicorp/terraform-provider-azuread/internal/services/identitygovernance
import (
	"context"
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/beta"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/identitygovernance/beta/entitlementmanagementaccesspackage"
	"github.com/hashicorp/go-azure-sdk/sdk/nullable"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"golang.org/x/text/cases"
	"golang.org/x/text/language"
)
func flattenAssignmentReviewSettings(input *beta.AssignmentReviewSettings) []map[string]interface{} {
	if input == nil {
		return nil
	}

	return []map[string]interface{}{{
		"access_recommendation_enabled":   input.IsAccessRecommendationEnabled.GetOrZero(),
		"access_review_timeout_behavior":  pointer.From(input.AccessReviewTimeoutBehavior),
		"approver_justification_required": input.IsApprovalJustificationRequired.GetOrZero(),
		"duration_in_days":                input.DurationInDays.GetOrZero(),
		"enabled":                         input.IsEnabled.GetOrZero(),
		"review_frequency":                input.RecurrenceType.GetOrZero(),
		"review_type":                     input.ReviewerType.GetOrZero(),
		"reviewer":                        flattenUserSets(input.Reviewers),
		"starting_on":                     input.StartDateTime.GetOrZero(),
	}}
}
