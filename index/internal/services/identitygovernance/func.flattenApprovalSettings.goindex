package github.com/hashicorp/terraform-provider-azuread/internal/services/identitygovernance
import (
	"fmt"
	"time"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-sdk/sdk/odata"
	"github.com/manicminer/hamilton/msgraph"
)
func flattenApprovalSettings(input *msgraph.ApprovalSettings) []map[string]interface{} {
	if input == nil {
		return nil
	}

	result := []map[string]interface{}{{
		"approval_required":                input.IsApprovalRequired,
		"approval_required_for_extension":  input.IsApprovalRequiredForExtension,
		"requestor_justification_required": input.IsRequestorJustificationRequired,
	}}

	approvalStages := make([]interface{}, 0)
	for _, v := range *input.ApprovalStages {
		approvalStage := map[string]interface{}{
			"approval_timeout_in_days":            v.ApprovalStageTimeOutInDays,
			"approver_justification_required":     v.IsApproverJustificationRequired,
			"alternative_approval_enabled":        v.IsEscalationEnabled,
			"enable_alternative_approval_in_days": *v.EscalationTimeInMinutes / 60 / 24,
			"primary_approver":                    flattenUserSets(v.PrimaryApprovers),
			"alternative_approver":                flattenUserSets(v.EscalationApprovers),
		}

		approvalStages = append(approvalStages, approvalStage)
	}
	result[0]["approval_stage"] = approvalStages

	return result
}
