package github.com/hashicorp/terraform-provider-azuread/internal/sdk
import (
	"fmt"
	"reflect"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)
func setValue(input, tfschemaValue interface{}, index int, fieldName string, debugLogger Logger) (errOut error) {
	debugLogger.Infof("setting list value for %q..", fieldName)
	defer func() {
		if r := recover(); r != nil {
			debugLogger.Warnf("error setting value for %q: %+v", fieldName, r)
			out, ok := r.(error)
			if !ok {
				return
			}

			errOut = out
		}
	}()

	if v, ok := tfschemaValue.(string); ok {
		debugLogger.Infof("[String] Decode %+v", v)
		debugLogger.Infof("Input %+v", reflect.ValueOf(input))
		debugLogger.Infof("Input Elem %+v", reflect.ValueOf(input).Elem())
		reflect.ValueOf(input).Elem().Field(index).SetString(v)
		return nil
	}

	if v, ok := tfschemaValue.(int); ok {
		debugLogger.Infof("[INT] Decode %+v", v)
		reflect.ValueOf(input).Elem().Field(index).SetInt(int64(v))
		return nil
	}

	if v, ok := tfschemaValue.(int32); ok {
		debugLogger.Infof("[INT] Decode %+v", v)
		reflect.ValueOf(input).Elem().Field(index).SetInt(int64(v))
		return nil
	}

	if v, ok := tfschemaValue.(int64); ok {
		debugLogger.Infof("[INT] Decode %+v", v)
		reflect.ValueOf(input).Elem().Field(index).SetInt(v)
		return nil
	}

	if v, ok := tfschemaValue.(float64); ok {
		debugLogger.Infof("[Float] Decode %+v", v)
		reflect.ValueOf(input).Elem().Field(index).SetFloat(v)
		return nil
	}

	// Doesn't work for empty bools?
	if v, ok := tfschemaValue.(bool); ok {
		debugLogger.Infof("[BOOL] Decode %+v", v)

		reflect.ValueOf(input).Elem().Field(index).SetBool(v)
		return nil
	}

	if v, ok := tfschemaValue.(*schema.Set); ok {
		return setListValue(input, index, fieldName, v.List(), debugLogger)
	}

	if mapConfig, ok := tfschemaValue.(map[string]interface{}); ok {
		mapOutput := reflect.MakeMap(reflect.ValueOf(input).Elem().Field(index).Type())
		for key, val := range mapConfig {
			mapOutput.SetMapIndex(reflect.ValueOf(key), reflect.ValueOf(val))
		}

		reflect.ValueOf(input).Elem().Field(index).Set(mapOutput)
		return nil
	}

	if v, ok := tfschemaValue.([]interface{}); ok {
		return setListValue(input, index, fieldName, v, debugLogger)
	}

	return nil
}
