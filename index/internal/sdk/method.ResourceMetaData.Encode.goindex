package github.com/hashicorp/terraform-provider-azuread/internal/sdk
import (
	"fmt"
	"reflect"
)
func (rmd ResourceMetaData) Encode(input interface{}) error {
	if reflect.TypeOf(input).Kind() != reflect.Ptr {
		return fmt.Errorf("need a pointer")
	}

	objType := reflect.TypeOf(input).Elem()
	objVal := reflect.ValueOf(input).Elem()

	fieldName := reflect.ValueOf(input).Elem().String()
	serialized, err := recurse(objType, objVal, fieldName, rmd.serializationDebugLogger)
	if err != nil {
		return err
	}

	for k, v := range serialized {
		//lintignore:R001
		if err := rmd.ResourceData.Set(k, v); err != nil {
			return fmt.Errorf("setting %q: %+v", k, err)
		}
	}
	return nil
}
