package github.com/hashicorp/terraform-provider-azuread/internal/helpers/applications
import (
	"context"
	"fmt"
	"strings"

	"github.com/hashicorp/go-azure-helpers/lang/pointer"
	"github.com/hashicorp/go-azure-helpers/lang/response"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/applications/stable/owner"
	"github.com/hashicorp/go-azure-sdk/microsoft-graph/common-types/stable"
)
func GetOwner(ctx context.Context, client *owner.OwnerClient, id stable.ApplicationIdOwnerId) (stable.DirectoryObject, error) {
	applicationId := stable.NewApplicationID(id.ApplicationId)

	options := owner.ListOwnersOperationOptions{
		Filter: pointer.To(fmt.Sprintf("id eq '%s'", id.DirectoryObjectId)),
	}

	resp, err := client.ListOwners(ctx, applicationId, options)
	if err != nil {
		if response.WasNotFound(resp.HttpResponse) {
			return nil, nil
		}
		return nil, fmt.Errorf("unable to list Owners with filter %q: %+v", *options.Filter, err)
	}

	if resp.Model != nil {
		for _, o := range *resp.Model {
			if o.DirectoryObject().Id != nil && strings.EqualFold(*o.DirectoryObject().Id, id.DirectoryObjectId) {
				return o, nil
			}
		}
	}

	return nil, nil
}
